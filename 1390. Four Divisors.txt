1390. Four Divisors

Given an integer array nums, return the sum of divisors of the integers in that array that have exactly four divisors. If there is no such integer in the array, return 0.

 

Example 1:

Input: nums = [21,4,7]
Output: 32
Explanation: 
21 has 4 divisors: 1, 3, 7, 21
4 has 3 divisors: 1, 2, 4
7 has 2 divisors: 1, 7
The answer is the sum of divisors of 21 only.
Example 2:

Input: nums = [21,21]
Output: 64
Example 3:

Input: nums = [1,2,3,4,5]
Output: 0
 

Constraints:

1 <= nums.length <= 104
1 <= nums[i] <= 105

SOLUTION:
class Solution {
    public int sumFourDivisors(int[] nums) {
        int sum = 0;
        for (Integer num : nums) {
            List<Integer> divisors =  getdivisor(num);
            if (divisors != null) {
                for (int divisor : divisors) {
                    sum += divisor;
                }
            }
        }
        return sum;
    }
    private List<Integer> getdivisor(int num){
        List<Integer> list=new ArrayList<>();
        list.add(num);
        int count=1;
        if(num!=1){
            list.add(1);
            count++;
        }
        for(int i=2;i<=Math.sqrt(num);i++){
            if(num%i==0){
                list.add(i);
                count++;
                if(num/i != i){
                    list.add(num/i);
                    count++;
                }
                if(count>4){
                    return null;
                }
            }
        }
        if(count !=4){
            return null;
        }
        return list;
    }
}